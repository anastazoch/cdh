{
	"name": "ELASTIC_STACK",
	"label": "Elastic Stack",
	"description": "Elastic Stack service",
	"version": 1,
	"runAs": {
		"user": "elastic",
		"group": "elastic"
	},
	"maxInstances": 1,
	"icon": "images/elastic_stack.png",
	"compatibility": {
		"generation": 1,
		"cdhVersion": {
			"min": 5,
			"max": 5
		}
	},
	"parcel": {
		"requiredTags": ["cdh"],
		"optionalTags": ["es-plugin"]
	},
	"serviceInit" : {
		"preStartSteps" : [
			{ 
				"commandName" : "CreateHomeDirCommand"
			}
		],
	},
	{
		"healthAggregation" : { 
			"type" : "nonSingleton", 
			"percentGreenForGreen" : 95.0, 
			"percentYellowGreenForYellow" : 90.0 
		}
	},
	"commands" : [
		{
			"name" : "ForceStop",
			"label" : "Force stop",
			"description" : "Force stop of Elastic Stack",
			"roleCommand" : "ForceStopRole",
			"roleName" : "ELASTICSEARCH",
			"runMode" : "all"
		}
	],
	"roles": [
		{
			"name": "ELASTICSEARCH",
			"label": "Elasticsearch",
			"pluralLabel": "Elasticsearch",
			"jvmBased": true,
			"startRunner": {
				"program": "scripts/elasticsearch-control.sh",
				"args": ["start"]
			},
			"stopRunner" : {
				"timeout" : "90000",
				"runner" : {
					"program" : "scripts/elasticsearch-control.sh",
					"args" : ["stop"]
				}
			},
			"logging" : {
				"dir" : "/var/log/elasticsearch",
				"filename" : "elasticsearch.log",
				"modifiable" : true,
				"loggingType" : "log4j"
			},
			"commands": [
				{
					"name": "ForceStopRole",
					"label": "Force Stop Role",
					"description": "Force stop of Elasticsearch",
					"expectedExitCodes": [0],
					"requiredRoleState": "stopped",
					"commandRunner": {
						"program": "scripts/elasticsearch-control.sh",
						"args": ["stop"]
					}
				}
			],
			"parameters": [
				{
					"name" : "Xmx",
					"label" : "Xmx",
					"description" : "The Server Timeout",
					"configName" : "Xmx",
					"required" : true,
					"configurableInWizard" : true,
					"default" : 1,
					"invalidValues": [0],
					"type" : "memory", 
					"unit" : "gigabytes"
				},
				{
					"name" : "cluster_name",
					"label" : "Name of the cluster",
					"description" : "Use a descriptive name for your cluster",
					"configName" : "cluster.name",
					"required" : true,
					"configurableInWizard" : true,
					"default" : "my-application",
					"type" : "string
				},
				{
					"name" : "http_port",
					"label" : "Discovery seed hosts",
					"description" : "Pass an initial list of hosts to perform discovery when this node is started: ",
					"configName": "http.port",
					"required": true,
					"configurableInWizard": true,
					"default": "9200",
					"type": "port"
				},
				{
					"name" : "cluster_initial_master_nodes",
					"label" : "Cluster initial master nodes",
					"description" : "Bootstrap the cluster using an initial set of master-eligible nodes",
					"configName": "cluster.initial_master_nodes",
					"required": true,
					"configurableInWizard": true,
					"default": "9200",
					"type": "port"
				},
				{
					"name" : "discovery_seed_hosts",
					"label" : "Discovery seed hosts",
					"description" : "Pass an initial list of hosts to perform discovery when this node is started: ",
					"configName": "discovery.seed_hosts",
					"required": true,
					"configurableInWizard": true,
					"default": ["127.0.0.1", "[::1]"],
					"type": "string_array"
				},
				{
					"name" : "path_data",
					"label" : "Data path",
					"description" : "Path to directory where to store the data (separate multiple locations by comma)",
					"configName" : "path.data",
					"required" : true,
					"configurableInWizard" : true,
					"default" : "/var/lib/elasticsearch",
					"type" : "path",
					"pathType" : "localDataDir",
					"mode" : "0750"
				},
				{
					"name" : "path_log",
					"label" : "Log path",
					"description" : "Path to log files",
					"configName" : "path.log",
					"required" : true,
					"configurableInWizard" : true,
					"default" : "/var/log/elasticsearch",
					"type" : "path",
					"pathType" : "localDataDir",
					"mode" : "0750"
				},
				{
					"name" : "xpack_security_transport_ssl_enabled",
					"label" : "xpack_security_transport_ssl_enabled",
					"description" : "Enable or disable TLS for the transport networking layer",
					"configName": "xpack.security.transport.ssl.enabled",
					"required": no,
					"configurableInWizard" : true,
					"default" : "false",
					"type" : "boolean"
				},
				{
					"name" : "xpack_security_transport_ssl_verification_mode",
					"label" : "xpack_security_transport_ssl_verification_mode",
					"description" : "Verification mode for the transport networking layer TLS",
					"configName": "xpack.security.transport.ssl.verification_mode",
					"required": no,
					"configurableInWizard" : true,
					"default" : "full",
					"type" : "string",
					"conformRegex" : "full|certificate|none"
				},
				{
					"name" : "xpack_security_transport_ssl_keystore_path",
					"label" : "xpack_security_transport_ssl_keystore_path",
					"description" : "Path of the TLS keystore for the transport networking layer",
					"configName": "xpack.security.transport.ssl.keystore.path",
					"required" : no,
					"configurableInWizard" : true,
					"type" : "path",
					"pathType" : "localDataFile",
					"mode" : "0640"
				},
				{
					"name" : "xpack_security_transport_ssl_truststore_path",
					"label" : "xpack_security_transport_ssl_truststore_path",
					"description" : "Path to the truststore for the transport networking layer TLS",
					"configName" : "xpack.security.transport.ssl.truststore.path",
					"required": no,
					"configurableInWizard" : true,
					"type" : "path"
					"pathType" : "localDataFile",
					"mode" : "0644"
				},
				{
					"name" : "xpack_security_http_ssl_enabled",
					"label" : "xpack_security_transport_ssl_enabled",
					"description" : "Enable or disable TLS for the client communication",
					"configName": "xpack.security.http.ssl.enabled",
					"required": no,
					"configurableInWizard" : true,
					"default" : "false",
					"type" : "boolean"
				},
				{
					"name" : "xpack_security_http_ssl_keystore_path",
					"label" : "xpack_security_http_ssl_keystore_path",
					"description" : "Path to the TLS keystore for the client communication",
					"configName": "xpack.security.http.ssl.keystore.path",
					"required" : no,
					"configurableInWizard" : true,
					"type" : "path",
					"pathType" : "localDataFile",
					"mode" : "0640"
				}				
			],
			"configWriter": {
				"generators": [
					{
						"filename": "elasticsearch.yml",
						"configFormat": "properties"
					},
					{
						"filename" : "log4j2.properties",
						"configFormat" : "properties",
					}
				], 
				"auxConfigGenerators" : [
					{
						"filename" : "jvm.options",
						"sourceFilename" : "aux/jvm.options"
					}
				]
			}
		},
		{
			"name": "KIBANA",
			"label": "Kibana Dashboard",
			"pluralLabel": "Kibana",
			"jvmBased": true,
			"startRunner": {
				"program": "scripts/kibana-control.sh",
				"args": ["start"]
			},
			"stopRunner" : {
				"timeout" : "90000",
				"runner" : {
					"program" : "scripts/kibana-control.sh",
					"args" : ["stop"]
				}
			},
			"commands": [
				{
					"name": "ForceStopRole",
					"label": "Force Stop Role",
					"description": "Force stop of Kibana",
					"expectedExitCodes": [0],
					"requiredRoleState": "stopped",
					"commandRunner": {
						"program": "scripts/kibana-control.sh",
						"args": ["stop"]
					}
				}
			],
			"parameters": [
				{
					"name" : "server_port",
					"label" : "server_port",
					"description" : "Kibana is served by a back end server. This setting specifies the port to use.",
					"configName" : "server.port",
					"required" : no,
					"configurableInWizard" : true,
					"default" : 5601,
					"type" : "port"
				},
				{
					"name" : "server_host",
					"label" : "server_host",
					"description" : "Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values. The default is 'localhost', which usually means remote machines will not be able to connect. To allow connections from remote users, set this parameter to a non-loopback address.",
					"configName" : "server.host",
					"required" : true,
					"configurableInWizard" : true,
					"default" : "localhost",
					"type" : "string
				},
				{
					"name" : "server_name",
					"label" : "server_name",
					"description" : "The Kibana server's name. This is used for display purposes.",
					"configName": "server.name",
					"required": no,
					"configurableInWizard": true,
					"default": "your-hostname",
					"type": "string"
				},
				{
					"name" : "elasticsearch_hosts",
					"label" : "Elasticsearch hosts",
					"description" : "The URLs of the Elasticsearch instances to use for all your queries.",
					"configName" : "elasticsearch.hosts",
					"required" : true,
					"configurableInWizard" : true,
					"default" : "["http://localhost:9200"]",
					"type" : "string_array"
				},
				{
					"name" : "elasticsearch_preserveHost",
					"label" : "Elasticsearch preserve host",
					"description" : "When this setting's value is true Kibana uses the hostname specified in the server.host setting. When the value of this setting is false, Kibana uses the hostname of the host that connects to this Kibana instance.",
					"configName" : "elasticsearch.preserveHost",
					"required" : no,
					"configurableInWizard" : true,
					"default" : true,
					"type": "boolean"
				},
				{
					"name" : "kibana_index",
					"label" : "Kibana index",
					"description" : "Kibana uses an index in Elasticsearch to store saved searches, visualizations and dashboards. Kibana creates a new index if the index doesn't already exist.",
					"configName" : "kibana.index",
					"required" : no,
					"configurableInWizard":  true,
					"default" : ".kibana",
					"type" : "string"
				},
				{
					"name" : "elasticsearch_username",
					"label" : "Elasticsearch username",
					"description" : "If your Elasticsearch is protected with basic authentication, these settings provide the username and password that the Kibana server uses to perform maintenance on the Kibana index at startup. Your Kibana users still need to authenticate with Elasticsearch, which is proxied through the Kibana server.",
					"configName": "elasticsearch.username",
					"required": no,
					"configurableInWizard": true,
					"default" : "kibana_system",
					"type" : "string",
				},
				{
					"name" : "elasticsearch_password",
					"label" : "Elasticsearch password",
					"description" : "If your Elasticsearch is protected with basic authentication, these settings provide the username and password that the Kibana server uses to perform maintenance on the Kibana index at startup. Your Kibana users still need to authenticate with Elasticsearch, which is proxied through the Kibana server.",
					"configName" : "elasticsearch.password",
					"required" : no,
					"configurableInWizard" : "true",
					"default" : "kibana_system",
					"type" : "string",
				},
				{
					"name" : "server_ssl_enabled",
					"label" : "Enable SSL",
					"description" : "Enable SSL for the traffic between the browser and Kibana.",
					"configName" : "server.ssl.enabled",
					"required" : no,
					"configurableInWizard" : true,
					"default" : "false",
					"type" : "boolean",
				},
				{
					"name" : "server_ssl_certificate",
					"label" : "Server SSL certificate",
					"description" : "Path to the PEM-format SSL certificate",
					"configName": "server.ssl.certificate",
					"required": no,
					"configurableInWizard": true,
					"type" : "path",
					"pathType" : "localDataFile",
					"mode": "0644"
				},
				{
					"name" : "server_ssl_key",
					"label" : "Server SSL key",
					"description" : "Path to the PEM-format SSL key",
					"configName": "server.ssl.key",
					"required": no,
					"configurableInWizard": true,
					"type" : "path",
					"pathType" : "localDataFile",
					"mode": "0400"
				},
				{
					"name" : "elasticsearch_ssl_certificate",
					"label" : "Elasticsearch SSL certificate",
					"description" : "Provides the path to the PEM-format SSL certificate file. It is used to verify the identity of Kibana to Elasticsearch and is required when xpack.security.http.ssl.client_authentication in Elasticsearch is set to required.",
					"configName": "elasticsearch.ssl.certificate",
					"required": no,
					"configurableInWizard": true,
					"type" : "path",
					"pathType" : "localDataFile",
					"mode": "0644"
				},
				{
					"name" : "Elasticsearch_ssl_key",
					"label" : "Elasticsearch SSL key",
					"description" : "Provides the path to the PEM-format SSL key file. It is used to verify the identity of Kibana to Elasticsearch and is required when xpack.security.http.ssl.client_authentication in Elasticsearch is set to required.",
					"configName": "elasticsearchx.ssl.key",
					"required": no,
					"configurableInWizard": true,
					"type" : "path",
					"pathType" : "localDataFile",
					"mode": "0400"
				}
			],
			"configWriter": {
				"generators": [
					{
						"filename": "kibana.yml",
						"configFormat": "properties"
					}
				]
			}
		},
		{
			"name": "LOGSTASH",
			"label": "Logstash Data Processing Pipeline",
			"pluralLabel": "Logstash",
			"jvmBased": true,
			"startRunner": {
				"program": "scripts/logstash-control.sh",
				"args": ["start"]
			},
			"stopRunner" : {
				"timeout" : "90000",
				"runner" : {
					"program" : "scripts/logstash-control.sh",
					"args" : ["stop"]
				}
			},
			"commands": [
				{
					"name": "ForceStopRole",
					"label": "Force Stop Role",
					"description": "Force stop of Logstash",
					"expectedExitCodes": [0],
					"requiredRoleState": "stopped",
					"commandRunner": {
						"program": "scripts/logstash-control.sh",
						"args": ["stop"]
					}
				}
			],
			"configWriter": {
				"generators": [
					{
						"filename": "jvm.options",
						"configFormat": "properties"
					},
					{
						"filename": "startup.options",
						"configFormat": "properties"
					}
				],
				"auxConfigGenerators" : [
					{
						"filename" : "logstash.yml",
						"sourceFilename" : "aux/logstash.conf"
					},
					{
						"filename" : "logstash.conf",
						"sourceFilename" : "aux/logstash.conf"
					},
					{
						"filename" : "pipelines.conf",
						"sourceFilename" : "aux/pipelines.conf"
					}
				]
			}
		},
		{
			"name": "FILEBEAT",
			"label": "Filebeat Log Shipper",
			"pluralLabel": "Filebeat",
			"jvmBased": true,
			"startRunner": {
				"program": "scripts/filebeat-control.sh",
				"args": ["start"]
			},
			"stopRunner" : {
				"timeout" : "90000",
				"runner" : {
					"program" : "scripts/filebeat-control.sh",
					"args" : ["stop"]
				}
			},
			"commands": [
				{
					"name": "ForceStopRole",
					"label": "Force Stop Role",
					"description": "Force stop of Filebeat",
					"expectedExitCodes": [0],
					"requiredRoleState": "stopped",
					"commandRunner": {
						"program": "scripts/filebeat-control.sh",
						"args": ["stop"]
					}
				}
			],
			"configWriter": {
				"auxConfigGenerators" : [
					{
						"filename" : "filebeat.yml",
						"sourceFilename" : "aux/filebeat.yml"
					}
				]
			}
		},
		{
			"name": "METRICBEAT",
			"label": "Metricbeat Log Shipper",
			"pluralLabel": "Metricbeat",
			"jvmBased": true,
			"startRunner": {
				"program": "scripts/metricbeat-control.sh",
				"args": ["start"]
			},
			"stopRunner" : {
				"timeout" : "90000",
				"runner" : {
					"program" : "scripts/metricbeat-control.sh",
					"args" : ["stop"]
				}
			},
			"commands": [
				{
					"name": "ForceStopRole",
					"label": "Force Stop Role",
					"description": "Force stop of Metricbeat",
					"expectedExitCodes": [0],
					"requiredRoleState": "stopped",
					"commandRunner": {
						"program": "scripts/metricbeat-control.sh",
						"args": ["stop"]
					}
				}
			],
			"configWriter": {
				"auxConfigGenerators" : [
					{
						"filename": "metricbeat.yml",
						"sourceFilename": "aux/metricbeat.yml"
					}
				]
			}
		},
		{
			"name" : "PACKETBEAT",
			"label" : "Packetbeat Agent",
			"pluralLabel" : "PAcketbeat",
			"jvmBased" : true,
			"startRunner" : {
				"program" : "scripts/packetbeat-control.sh",
				"args" : ["start"]
			},
			"stopRunner" : {
				"timeout" : "90000",
				"runner" : 
				{					
					"program" : "scripts/packetbeat-control.sh",
					"args" : ["stop"]
				}
			},
			"commands": [
				{
					"name" : "ForceStopRole",
					"label" : "Force Stop Role",
					"description" : "Force stop of Elastic Search Node",
					"expectedExitCodes" : [0],
					"requiredRoleState" : "stopped",
					"commandRunner" : 
						{
							"program": "scripts/packetbeat-control.sh",
							"args": ["stop"]
						}
				}
			],
			"configWriter" : {
				"auxConfigGenerators" : [
					{
						"filename" : "packetbeat.yml",
						"sourceFilename" : "aux/packetbeat.yml"
					}
				]
			}
		}
	],
	{
		"rollingRestart" : {
			"nonWorkerSteps" : [
				{
					"roleName" : "ELASTICSEARCH",
					"bringDownCommands" : [ "Stop" ],
					"bringUpCommands" : [ "Start", "elasticsearch-control.sh" ]
				},
				{
					"roleName" : "KIBANA",
					"bringDownCommands" : [ "Stop" ],
					"bringUpCommands" : [ "Start", "kibana-control.sh" ]
				},
				{
					"roleName" : "LOGSTASH",
					"bringDownCommands" : [ "Stop" ],
					"bringUpCommands" : [ "Start", "logstash-control.sh" ]
				}
			],
			"workerSteps" : [
				{
					"roleName" : "FILEBEAT",
					"bringDownCommands" : [ "filebeat-control.sh", "Stop" ],
					"bringUpCommands" : [ "Start" ]
				},
				{
					"roleName" : "METRICBEAT",
					"bringDownCommands" : [ "metricbeat-control.sh", "Stop" ],
					"bringUpCommands" : [ "Start" ]
				},
				{
					"roleName" : "PACKETBEAT",
					"bringDownCommands" : [ "packetbeat-control.sh", "Stop" ],
					"bringUpCommands" : [ "Start" ]
				}
			]
		}
	}
}